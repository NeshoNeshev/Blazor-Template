@page "/administration"
@using BlazorWebAssembly.Web.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.ComponentModel.DataAnnotations

@attribute [Authorize(Roles = "Administrator")]
@inject HttpClient Http

<PageTitle>Administration</PageTitle>

<h1 class= "text-center">Administration</h1>
<AuthorizeView Roles="Administrator">
    <Authorized>
        <h1>Hello, @context.User.Identity.Name!</h1>
        <p>You can only see this content if you're Administrator.</p>

    </Authorized>
</AuthorizeView>

@if (viewModel == null)
{
    
    <p><em>Loading...</em></p>
}
else
{   
    <h4 class = "text-center">This is response on Administration Controller => @viewModel.Name</h4>

}
<div class="card text-center">
  <div class="card-header">
   Post only is in role Administrator
  </div>
  <div class="card-body">
    
    <EditForm Model="@inputModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <p>
        <label>
            Name:
            <InputText @bind-Value="inputModel.Name" />
        </label>
    </p>
    <button type="submit">Submit</button>
</EditForm>
  </div>
  <div class="card-footer text-muted">
    @DateTime.UtcNow.Date.Year
  </div>
</div>


@code {
    private DemoViewModel? viewModel;

    private DemoInputModel? inputModel;

    protected override async Task OnInitializedAsync()
    {
        inputModel = new DemoInputModel();

        try
        {
            viewModel = await Http.GetFromJsonAsync<DemoViewModel>("DemoAdministration");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
    private void HandleValidSubmit()
    {
        var response = Http.PostAsJsonAsync("DemoAdministration", inputModel?.Name);

    }
}